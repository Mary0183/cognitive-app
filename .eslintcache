[{"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\App.js":"1","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\reportWebVitals.js":"2","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\ToggleButtonTraits.js":"3","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\UserActivityList.js":"4","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\Accordion.js":"5","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\CurrentActivity.js":"6"},{"size":3885,"mtime":1614970218819,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1612703743961,"results":"9","hashOfConfig":"8"},{"size":5336,"mtime":1613833906305,"results":"10","hashOfConfig":"8"},{"size":1742,"mtime":1614260010909,"results":"11","hashOfConfig":"8"},{"size":1289,"mtime":1614261658806,"results":"12","hashOfConfig":"8"},{"size":3678,"mtime":1614106969608,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"le635f",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\App.js",["27"],"import React, { useState } from \"react\";\r\nimport UserActivityList from \"./components/UserActivityList\";\r\nimport CurrentActivity from \"./components/CurrentActivity\";\r\nimport stayPositive from \"./images/stayPositive.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nlet initialActions = [];\r\nconst initialFormState = { id: null, action: \"\" };\r\n\r\nfunction App() {\r\n  const [actions, setActions] = useState(initialActions); //keeps every action passed on the input fiel updated\r\n  const [currentUpdate, setCurrentUpdate] = useState(initialFormState);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [createUpdate, setCreateUpdate] = useState(true); //state that shows the \"admin\" side if it's true\r\n\r\n  function addAction(action) {\r\n    //adding an id to each action\r\n    action.id = actions.length + 1;\r\n    //I have to change the entire array in order for react to notice that something changed and to redraw if necessary\r\n    setActions((actions) => [...actions, action]); // using spread operator to create a copy and append an action\r\n    setCreateUpdate(false); // this state set to false will show the UserActivity component when add button is clicked\r\n  }\r\n\r\n  function removeAction(indexToFilter) {\r\n    const newList = actions.filter((action, index) => index !== indexToFilter);\r\n    setActions(newList);\r\n  }\r\n\r\n  const editRow = (action) => {\r\n    setUpdating(true);\r\n\r\n    setCurrentUpdate({\r\n      id: action.id,\r\n      action: action.action,\r\n      traits: action.traits,\r\n    });\r\n    setCreateUpdate(true); // this state set to true will show CreateActivity component when the pencil button is clicked. For the user to be able to edit\r\n  };\r\n\r\n  const updateActivity = (id, updatedActivity) => {\r\n    setUpdating(false);\r\n\r\n    setActions(\r\n      actions.map((action) => (action.id === id ? updatedActivity : action))\r\n    );\r\n    setCurrentUpdate(initialFormState);\r\n    setCreateUpdate(false); // this state set to false will show the UserActivity component when update button is clicked\r\n  };\r\n\r\n  const handleChangeView = (createUpdate) => {\r\n    setCreateUpdate(createUpdate);\r\n    //after clicking on seelist and arrow icon in CreateUpdateActivity set both to null\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"grid-container\">\r\n        <div className=\"left-side-image\">\r\n          <img src={stayPositive} />\r\n        </div>\r\n        <div className=\"grid-img-art\">\r\n          {/* onSubmit is expecting text that is passing from addAction */}\r\n          {createUpdate && (\r\n            <CurrentActivity\r\n              onSubmit={addAction}\r\n              currentUpdate={currentUpdate}\r\n              updating={updating}\r\n              actions={actions}\r\n              updateActivity={updateActivity}\r\n            />\r\n          )}\r\n\r\n          <div>\r\n            {!createUpdate && (\r\n              <UserActivityList\r\n                actions={actions}\r\n                onRemove={(index) => removeAction(index)}\r\n                editRow={editRow}\r\n                currentUpdate={currentUpdate}\r\n                onSubmit={(i) => handleChangeView(i)}\r\n              />\r\n            )}\r\n            <div className=\"grid-right-arrow-button\">\r\n              <h3 className={!createUpdate ? \"hide-see-list\" : \"see-list\"}>\r\n                See List\r\n              </h3>\r\n              <div className=\"see-list-arrow\">\r\n                <FontAwesomeIcon\r\n                  className={!createUpdate ? \"arrow-button\" : \"button\"}\r\n                  icon={faAngleRight}\r\n                  onClick={() => handleChangeView(false)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\reportWebVitals.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\ToggleButtonTraits.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\UserActivityList.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\Accordion.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\CurrentActivity.js",["28","29"],{"ruleId":"30","severity":1,"message":"31","line":63,"column":11,"nodeType":"32","endLine":63,"endColumn":37},{"ruleId":"33","severity":1,"message":"34","line":29,"column":6,"nodeType":"35","endLine":29,"endColumn":13,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":42,"column":16,"nodeType":"39","messageId":"40","endLine":42,"endColumn":18},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'showCurrentTraitUpdt' and 'showCurrentUpdt'. Either include them or remove the dependency array.","ArrayExpression",["41"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"42","fix":"43"},"Update the dependencies array to be: [props, showCurrentTraitUpdt, showCurrentUpdt]",{"range":"44","text":"45"},[870,877],"[props, showCurrentTraitUpdt, showCurrentUpdt]"]