[{"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\App.js":"1","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\ActionsDone.js":"2","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\reportWebVitals.js":"3","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\Form.js":"4","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\ToggleButtonTraits.js":"5"},{"size":1800,"mtime":1613252774034,"results":"6","hashOfConfig":"7"},{"size":1866,"mtime":1613239838025,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1612703743961,"results":"9","hashOfConfig":"7"},{"size":2516,"mtime":1613253369277,"results":"10","hashOfConfig":"7"},{"size":4358,"mtime":1613223946274,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"le635f",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\App.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\ActionsDone.js",["24","25"],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// import { Accordion, Card, Button } from \"react-bootstrap\";\r\n\r\nimport \"./ActionsDone.css\";\r\n\r\nfunction ActionsDone(props) {\r\n  return (\r\n    <>\r\n      <div className=\"ActionsDone\">\r\n        <ul>\r\n          {props.actions.map((action, index) => (\r\n            <li key={index}>\r\n              {action.action}\r\n              <FontAwesomeIcon\r\n                className=\"remove-button\"\r\n                icon={faTimesCircle}\r\n                onClick={() => props.onRemove(index)}\r\n              />\r\n              <FontAwesomeIcon\r\n                className=\"edit-button\"\r\n                icon={faPencilAlt}\r\n                onClick={() => {\r\n                  props.editRow(action, action.traits);\r\n                }}\r\n              />\r\n              {\r\n                <>\r\n                  <ul>\r\n                    {action.traits.nice.map((trait) => (\r\n                      <li>{trait}</li>\r\n                    ))}\r\n                  </ul>\r\n                  <ul>\r\n                    {action.traits.happy.map((trait) => (\r\n                      <li>{trait}</li>\r\n                    ))}\r\n                  </ul>\r\n                  <ul>\r\n                    {action.traits.brave.map((trait) => (\r\n                      <li>{trait}</li>\r\n                    ))}\r\n                  </ul>\r\n                  <ul>\r\n                    {action.traits.smart.map((trait) => (\r\n                      <li>{trait}</li>\r\n                    ))}\r\n                  </ul>\r\n                </>\r\n              }\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default ActionsDone;\r\n","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\reportWebVitals.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\Form.js",["26"],"import React, { useState, useEffect } from \"react\";\r\nimport ToggleButtonTraits from \"./ToggleButtonTraits\";\r\n\r\nimport \"./Form.css\";\r\n\r\nconst emptyTraitArray = {\r\n  nice: [],\r\n  happy: [],\r\n  brave: [],\r\n  smart: [],\r\n};\r\n\r\nconst Form = (props) => {\r\n  // Set initial data to optional 'data' props, if passed, else empty\r\n  let initialData = props.data || emptyTraitArray;\r\n\r\n  let showCurrentUpdt = props.currentUpdate.action; //edit mode\r\n  let showCurrentTraitUpdt = props.currentUpdate.traits; //edit mode\r\n\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [traits, setTraits] = useState(initialData);\r\n  console.log(traits);\r\n\r\n  //edit mode\r\n  useEffect(() => {\r\n    setActivity(showCurrentUpdt);\r\n    setTraits(showCurrentTraitUpdt || emptyTraitArray); //if traits are being selected show them or don't\r\n  }, [props]);\r\n\r\n  function handleChange(values, event) {\r\n    let groupName = event.target.name;\r\n    setTraits((data) => {\r\n      return { ...data, [groupName]: values }; //adds a key to traits object with the selected values\r\n    });\r\n  }\r\n\r\n  // handleSubmit is handling the data submitted after writting an action and selecting traits when the button is clicked\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    //onSubmit props comes from the parent component and does reference to addAction function\r\n    props.onSubmit({\r\n      action: activity,\r\n      traits: traits,\r\n    });\r\n    setActivity(\"\");\r\n    setTraits(emptyTraitArray);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    let { name, value } = event.target; //name of the field and value of the field\r\n    if (name === \"actionInput\") {\r\n      setActivity(value); //value is the activity passed in the input field\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Form\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"action\">\r\n            <input\r\n              name=\"actionInput\"\r\n              type=\"text\"\r\n              value={activity}\r\n              onChange={handleInputChange}\r\n            ></input>\r\n          </label>\r\n          {/* if updating is not true show Update button*/}\r\n          {!props.updating && <button type=\"submit\">Add</button>}\r\n          {/* if updating is true show Update button*/}\r\n          {props.updating && <button>Update</button>}\r\n        </form>\r\n      </div>\r\n\r\n      <ToggleButtonTraits\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n        traits={traits}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\ToggleButtonTraits.js",[],{"ruleId":"27","severity":1,"message":"28","line":1,"column":17,"nodeType":"29","messageId":"30","endLine":1,"endColumn":25},{"ruleId":"27","severity":1,"message":"31","line":1,"column":27,"nodeType":"29","messageId":"30","endLine":1,"endColumn":36},{"ruleId":"32","severity":1,"message":"33","line":28,"column":6,"nodeType":"34","endLine":28,"endColumn":13,"suggestions":"35"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'showCurrentTraitUpdt' and 'showCurrentUpdt'. Either include them or remove the dependency array.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [props, showCurrentTraitUpdt, showCurrentUpdt]",{"range":"39","text":"40"},[824,831],"[props, showCurrentTraitUpdt, showCurrentUpdt]"]