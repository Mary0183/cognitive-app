[{"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\reportWebVitals.js":"1","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\App.js":"2","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\Form.js":"3","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\ActionsDone.js":"4","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\CharacterTraits.js":"5","C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\index.js":"6"},{"size":362,"mtime":1610879695782,"results":"7","hashOfConfig":"8"},{"size":1304,"mtime":1612537491642,"results":"9","hashOfConfig":"8"},{"size":1099,"mtime":1612378302531,"results":"10","hashOfConfig":"8"},{"size":460,"mtime":1612462247753,"results":"11","hashOfConfig":"8"},{"size":255,"mtime":1612537485528,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1610879695782,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"le635f",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\reportWebVitals.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\App.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\Form.js",["28"],"import React, { useState } from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = (props) => {\r\n  const [text, setText] = useState(\"\"); //state called text\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.onSubmit(text); //is defined by the parent\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    let { name, value } = event.target; //name of the field and value of the field\r\n\r\n    switch (name) {\r\n      case \"textInput\":\r\n        setText(value);\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Form\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"action\">\r\n            <input\r\n              name=\"textInput\" // name should match the name case if not in won't update the state correctly\r\n              type=\"text\"\r\n              value={text} //the value must match the state\r\n              onChange={handleInputChange}\r\n            ></input>\r\n          </label>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n",["29","30"],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\ActionsDone.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\components\\CharacterTraits.js",[],"C:\\Users\\marys\\projects\\pt4\\cognitive-app\\src\\index.js",[],{"ruleId":"31","severity":1,"message":"32","line":19,"column":7,"nodeType":"33","messageId":"34","endLine":20,"endColumn":15},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-global-assign","no-unsafe-negation"]